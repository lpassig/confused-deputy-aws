"""
Product models for the MCP server.

This module contains the Pydantic models for product operations
with AWS DocumentDB integration.
"""

from typing import Any, Optional

from pydantic import BaseModel, Field


class Product(BaseModel):
    """
    Product model for AWS DocumentDB operations.

    Attributes:
        id: Product ID (optional for creation, auto-generated by DB)
        name: Product name (required, non-empty string)
        price: Product price (required, positive float)
    """

    id: Optional[str] = Field(None, description="Product ID")
    name: str = Field(..., min_length=1, max_length=200, description="Product name")
    price: float = Field(..., gt=0, description="Product price (must be positive)")


class ProductResponse(BaseModel):
    """Standard response model for product operations."""

    success: bool = Field(..., description="Operation success status")
    message: str = Field(..., description="Operation result message")
    data: Optional[Any] = Field(None, description="Operation result data")


class ProductListResponse(BaseModel):
    """Response model for listing multiple products."""

    success: bool = Field(..., description="Operation success status")
    message: str = Field(..., description="Operation result message")
    products: list[Product] = Field(
        default_factory=list, description="List of products"
    )
    count: int = Field(0, description="Number of products returned")


class ErrorResponse(BaseModel):
    """Model for error responses"""

    error: str


class SuccessResponse(BaseModel):
    """Model for success responses"""

    message: str
    id: Optional[str] = None
