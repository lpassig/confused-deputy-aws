{
    "openapi": "3.1.0",
    "info": {
        "title": "ProductsAgent API",
        "description": "FastAPI application for ProductsAgent with JWT authentication and Microsoft Entra ID token exchange",
        "version": "0.1.0"
    },
    "paths": {
        "/health": {
            "get": {
                "summary": "Health Check",
                "description": "Health check endpoint.",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/invoke": {
            "post": {
                "summary": "Invoke Agent",
                "description": "Invoke the ProductsAgent with user prompt.\n\nThis endpoint:\n1. Validates the JWT token in the Authorization header\n2. Exchanges the user token for an on-behalf-of token using Microsoft Entra ID\n3. Invokes the ProductsAgent with the on-behalf-of token\n4. Returns the agent's response",
                "operationId": "invoke_agent_agent_invoke_post",
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Token exchange failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "summary": "Get User Info",
                "description": "Get current user information from JWT token.",
                "operationId": "get_user_info_user_info_get",
                "parameters": [
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgentRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Prompt",
                        "description": "The user prompt to send to the ProductsAgent"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "AgentRequest",
                "description": "Request model for agent invocation.",
                "example": {
                    "prompt": "Could you please list all products?"
                }
            },
            "AgentResponse": {
                "properties": {
                    "response": {
                        "type": "string",
                        "title": "Response",
                        "description": "The response from the ProductsAgent"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Indicates if the request was successful",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "response"
                ],
                "title": "AgentResponse",
                "description": "Response model for agent invocation.",
                "example": {
                    "response": "Here are all the products in the catalog:\n\n1. Product A - $99.99\n2. Product B - $149.99",
                    "success": true
                }
            },
            "ErrorResponse": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Error message"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Indicates the request failed",
                        "default": false
                    },
                    "error_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Code",
                        "description": "Error code for client handling"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorResponse",
                "description": "Error response model.",
                "example": {
                    "detail": "Authentication failed",
                    "error_code": "AUTH_ERROR",
                    "success": false
                }
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Service status"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "Current timestamp"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "Application version"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "timestamp",
                    "version"
                ],
                "title": "HealthResponse",
                "description": "Health check response model.",
                "example": {
                    "status": "healthy",
                    "timestamp": "2024-01-15T10:30:00Z",
                    "version": "0.1.0"
                }
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}